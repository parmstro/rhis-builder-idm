---

# based on the number of nodes, ensure we meet
# an HA topology requirement with no SPOF
# no more than 3 replication agreements per host

# consolidate the list of primary and replicas into a single group

- name: "Add the IdM primary to the idm_topology group"
  ansible.builtin.add_host:
    name: "{{ groups['idm_primary'][0] }}"
    groups: "idm_topology"

- name: "Add the IdM replicas to the idm topology group"
  when: groups['idm_replicas'] is defined and ( groups['idm_replicas'] | length ) > 0
  ansible.builtin.add_host:
    name: "{{ replica }}"
    groups: "idm_topology"
  loop: "{{ groups['idm_replicas'] }}"
  loop_control:
    loop_var: replica

- name: "List the nodes in the group"
  ansible.builtin.debug:
    var: groups['idm_topology']

# NOTE: This currently does not handle multi site configurations, need to add site information to inventory
- name: "Determine the size of the group"
  ansible.builtin.set_fact:
    idmreplica_topology_size: "{{ groups['idm_topology'] | length }}"

- name: "Assert the topology_size is not zero"
  ansible.builtin.assert:
    that: ( idmreplica_topology_size | int ) > 0

# currently fault_level can be 1 or 2
- name: "Set the default replica fault level"
  when: idmreplica_fault_level is not defined
  ansible.builtin.set_fact:
    idmreplica_fault_level: 1

- name: "Validate idmreplica_fault_level"
  ansible.builtin.assert:
    that: ( idmreplica_fault_level | int) <= ( idmreplica_fault_level_max | int )

# the topology index is defined by the number of nodes (topology size) mutiplied by
# the number of faulted nodes the topology will support (fault level) without losing redundancy
# e.g. a BOX-X topology requires 4 nodes and will support any 2 nodes failing without losing redundancy = topology index 8
# e.g. a BOX topology also requires 4 nodes, but will only support 1 node failing without potentially losing redundancy = topology index 4
# a BOX results in complete isolation and a split brain state if nodes in opposite corners of the box are lost.
# with 4 nodes, a BOX-X is preferred
# this allows us to navigate the simple topology graph
# see rhis-builder-inventory for the topology graph

- name: "Determine the topology index"
  when: idmreplica_fault_level is defined and (idmreplica_fault_level | int) != 0
  ansible.builtin.set_fact:
    idmreplica_topology_index: "{{ (idmreplica_topology_size | int) * (idmreplica_fault_level | int) }}"

- name: "Set the recommended topology"
  when: ( idmreplica_topology_index | int ) == ( idmreplica_topology_graph.index | int )
  ansible.builtin.set_fact:
    current_tg: "{{ idmreplica_topology_graph }}"
  loop: "{{ idm_standard_topologies }}"
  loop_control:
    loop_var: idmreplica_topology_graph

- name: "Applying topology"
  ansible.builtin.debug:
    msg: "Applying topology: {{ current_tg.name }} with topology index: {{ current_tg.index }}"

- name: "Apply graph"
  ansible.builtin.include_tasks: "apply_idm_topology_graph.yml"

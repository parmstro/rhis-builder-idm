---

# based on the number of nodes, ensure we meet
# an HA topology requirement with no SPOF
# no more than 3 replication agreements per host

# consolidate the list of primary and replicas into a single group

- name: "Add the IdM primary to the idm_topology group"
  ansible.builtin.add_host:
    name: "{{ groups['idm_primary'][0] }}"
    groups: "idm_topology"

- name: "Add the IdM replicas to the idm topology group"
  when: groups['idm_replicas'] is defined and ( groups['idm_replicas'] | length ) > 0
  ansible.builtin.add_host:
    name: "{{ replica }}"
    groups: "idm_topology"
  loop: "{{ groups['idm_replicas'] }}"
  loop_control:
    loop_var: replica

- name: "List the nodes in the group"
  ansible.builtin.debug:
    var: groups['idm_topology']

# NOTE: This currently does not handle multi site configurations, need to add site information to inventory
- name: "Determine the size of the group"
  ansible.builtin.set_fact:
    topology_size: "{{ groups['idm_topology'] | length }}"

- name: "Assert the topology_size is not zero"
  ansible.builtin.assert:
    that: ( topology_size | int ) > 0

# currently fault_level can be 1 or 2
- name: "Set the default fault level"
  when: fault_level is not defined
  ansible.builtin.set_fact:
    fault_level: 1

- name: "Validate fault_level"
  ansible.builtin.assert:
    that: ( fault_level | int) <= ( idm_fault_level_max | int )

- name: "Determine the topology index"
  when: fault_level is defined and (fault_level | int) != 0
  ansible.builtin.set_fact:
    topology_index: "{{ topology_size * fault_level }}"

- name: "Set the recommended topology"
  when: ( topology_index | int ) == ( topology_graph.index | int )
  ansible.builtin.set_fact:
    current_tg: "{{ topology_graph }}"
  loop: "{{ idm_standard_topologies }}"
  loop_control:
    loop_var: topology_graph

- name: "Applying topology"
  ansible.builtin.debug:
    msg: "Applying topology: {{ current_tg.name }} with topology index: {{ current_tg.index }}"

- name: "Apply graph"
  ansible.builtin.include_tasks: "apply_idm_topology_graph.yml"

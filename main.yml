---
# Set up the prerequisites, install idm, configure idm
# our idm role encapsulates ipaserver and post configuration
- name: "Build the idm primary"
  hosts: idm_primary
  become: true
  gather_facts: true
  vars_files:
    - "~/rhisbuilder_vault.yml"

  tasks:

    - name: "Apply role idm_pre"
      ansible.builtin.include_role:
        name: idm_pre

    - name: "Apply role idm_primary"
      ansible.builtin.include_role:
        name: idm_primary

    # set the base configurations for the deployment
    - name: "Apply role idm_configuration"
      ansible.builtin.include_role:
        name: idm_configuration

    # ensure your id ranges before you create users
    - name: "Apply role idm_id_ranges"
      ansible.builtin.include_role:
        name: idm_id_ranges

    # idp references must exist before you can
    # apply to a user authentication scheme
    - name: "Apply role idm_idp_reference"
      ansible.builtin.include_role:
        name: idm_idp_reference

    - name: "Apply role idm_users"
      ansible.builtin.include_role:
        name: idm_users

    - name: "Apply role idm_user_groups"
      ansible.builtin.include_role:
        name: idm_user_groups

    # password policy is applied to groups
    # group needs to exist of will policy creation/mod will fail
    - name: "Apply role idm_password_policy"
      ansible.builtin.include_role:
        name: idm_password_policy

    - name: "Apply role idm_host_groups"
      ansible.builtin.include_role:
        name: idm_host_groups

    # Add the hosts do not support ipa_client
    # Add hosts that *do* support ipa_client
    - name: "Apply role idm_hosts"
      ansible.builtin.include_role:
        name: idm_hosts

    - name: "Apply role idm_hbac policy"
      ansible.builtin.include_role:
        name: idm_hbac_policy

    - name: "Apply role idm_sudo policy"
      ansible.builtin.include_role:
        name: idm_sudo_policy

    - name: "Apply role idm_dns setup"
      ansible.builtin.include_role:
        name: idm_dns_setup
